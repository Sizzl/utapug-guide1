{"remainingRequest":"/home/ulv/Code/vue-travel-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ulv/Code/vue-travel-app/src/views/DestinationDetails.vue?vue&type=style&index=0&id=4002e00e&scoped=true&lang=css&","dependencies":[{"path":"/home/ulv/Code/vue-travel-app/src/views/DestinationDetails.vue","mtime":1621904278676},{"path":"/home/ulv/Code/vue-travel-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ulv/Code/vue-travel-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/ulv/Code/vue-travel-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/ulv/Code/vue-travel-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ulv/Code/vue-travel-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaW1nIHsKICBtYXgtd2lkdGg6IDYwMHB4OwogIGhlaWdodDogYXV0bzsKICB3aWR0aDogMTAwJTsKICBtYXgtaGVpZ2h0OiA0MDBweDsKfQouZGVzdGluYXRpb24tZGV0YWlscyB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47Cn0KcCB7CiAgbWFyZ2luOiAwIDQwcHg7CiAgZm9udC1zaXplOiAyMHB4OwogIHRleHQtYWxpZ246IGxlZnQ7Cn0KLmNhcmRzIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKfQouY2FyZHMgaW1nIHsKICBtYXgtaGVpZ2h0OiAyMDBweDsKfQouY2FyZCB7CiAgcGFkZGluZzogMCAyMHB4OwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQouY2FyZF9fdGV4dCB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogNTAlOwogIGxlZnQ6IDUwJTsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKICBjb2xvcjogd2hpdGU7CiAgZm9udC1zaXplOiAyNXB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKfQo="},{"version":3,"sources":["DestinationDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DestinationDetails.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <section class=\"destinations\">\n      <h1>\n        {{ destination.name }}\n      </h1>\n      <div class=\"destination-details\">\n        <img\n          :src=\"require(`@/assets/${destination.image}`)\"\n          :alt=\"destination.name\"\n        />\n      </div>\n    </section>\n    <section class=\"experiences\">\n      <h2>Objectives</h2>\n      <div class=\"cards\">\n        <div\n          v-for=\"experience in destination.experiences\"\n          :key=\"experience.slug\"\n          class=\"card\"\n        >\n          <router-link\n            :to=\"{\n              name: 'experienceDetails',\n              params: { experienceSlug: experience.slug }\n            }\"\n          >\n            <img\n              :src=\"require(`@/assets/${experience.image}`)\"\n              :alt=\"experience.name\"\n            />\n            <span class=\"card__text\">\n              {{ experience.name }}\n            </span>\n          </router-link>\n        </div>\n      </div>\n      <router-view :key=\"$route.path\" />\n    </section>\n  </div>\n</template>\n<script>\nimport store from \"@/store\";\nexport default {\n  components: {\n  },\n  data() {\n    return {};\n  },\n  props: {\n    slug: {\n      type: String,\n      required: true\n    }\n  },\n  computed: {\n    destination() {\n      return store.destinations.find(\n        destination => destination.slug == this.slug\n      );\n    }\n  }\n};\n</script>\n\n<style scoped>\nimg {\n  max-width: 600px;\n  height: auto;\n  width: 100%;\n  max-height: 400px;\n}\n.destination-details {\n  display: flex;\n  justify-content: space-between;\n}\np {\n  margin: 0 40px;\n  font-size: 20px;\n  text-align: left;\n}\n.cards {\n  display: flex;\n  justify-content: space-between;\n}\n.cards img {\n  max-height: 200px;\n}\n.card {\n  padding: 0 20px;\n  position: relative;\n}\n.card__text {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color: white;\n  font-size: 25px;\n  font-weight: bold;\n  text-decoration: none;\n}\n</style>\n"]}]}